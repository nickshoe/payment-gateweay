# API-first development with OpenAPI
# This file will be used at compile time to generate Spring-MVC endpoint stubs using openapi-generator
openapi: '3.0.1'
info:
  title: 'paymentGatewayApi'
  version: 0.0.1
servers:
  - url: http://localhost:8080/api
    description: Development server
  - url: https://localhost:8080/api
    description: Development server with TLS Profile
tags:
  - name: Payments
    description: Operations related to payment requests
paths:
  /payments-requests/{paymentId}:
    parameters:
      - $ref: "#/components/parameters/PaymentId"
    put:
      security:
        - oauth2: [ 'payment:queue' ]
      tags:
        - Payments
      operationId: queuePaymentRequest
      description: Add a payment request to the queue, if not already added.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueuePaymentRequestCommand"
      responses:
        204:
          $ref: "#/components/responses/PaymentRequestQueued"
    get:
      security:
        - oauth2: [ 'payment:read' ]
      tags:
        - Payments
      operationId: readPaymentRequest
      description: Read the payment request up to date info.
      responses:
        200:
          description: The payment request updated info.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentRequest"
components:
  parameters:
    PaymentId:
      in: path
      name: paymentId
      schema:
        type: string
      required: true
      description: The ID of the payment request, generated by the client (must be exactly the same for any attempts).
      example: "352d9266-fae2-40c2-a0fc-11de4ebe70cc"
  responses:
    PaymentRequestQueued:
      description: Payment request successfully added to the queue.
      headers:
        Location:
          required: true
          description: URL of the updated resource.
          schema:
            type: string
            format: uri
          example: "http://localhost:8080/api/payments-requests/352d9266-fae2-40c2-a0fc-11de4ebe70cc"
  schemas:
    QueuePaymentRequestCommand:
      type: object
      required:
        - transaction_id
        - credit_card_info
        - amount
      properties:
        transaction_id:
          type: string
          example: "40a80a1d-d874-43ec-a84f-e8089188eb28"
        credit_card_info:
          type: object
          required:
            - number
            - holder
            - security_code
          properties:
            number:
              type: string
              example: "4032032241726550"
            holder:
              type: string
              example: "John Doe"
            security_code:
              type: string
              example: "708"
        amount:
          type: string
          description: Amount, expressed in cents. (e.g. "590" stands for 5.90)
          example: "590"
    PaymentRequest:
      type: object
      properties:
        id:
          type: string
          example: "352d9266-fae2-40c2-a0fc-11de4ebe70cc"
        created_at:
          type: string
          format: datetime
          example: "2025-02-27T17:37:14.838196Z"
        updated_at:
          type: string
          format: datetime
          example: "2025-02-27T17:37:17.758190Z"
        status:
          type: string
          enum:
            - NEW
            - READY
            - RUNNING
            - TERMINATED
        result:
          type: string
          enum:
            - SUCCESS
            - FAILURE
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: http://localhost:8888/oauth/2.0/token
          scopes:
            payment:read: Read a payment request
            payment:queue: Queue a payment request
security:
  - oauth2: [ ]
